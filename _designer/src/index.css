@import-normalize;

body {
  font-size: 1.2em;
  font-family: 'Archivo Narrow', sans-serif;
  line-height: 1.2;
  padding: 0;
}

h1{
  font-family: 'Archivo Black', sans-serif;
  text-align: center;
}

button {
  font-family: inherit;
  font-size: inherit;
}

.designer{
  margin-left: auto;
  margin-right: auto;
  user-select: none;
}

.designer .toprow {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  height: 80vh;
  width: 100%;
}

.designer .bottomrow {
  margin-top: 2em;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

.toolbox {
  overflow: scroll;
  overflow-y: auto;
  overflow-x: hidden;
  text-align: center;
  width: 30vh;
}

.toolbox .tools{
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-around;
}

.toolbox label {
  cursor: pointer;
}

.toolbox button.hexbutton{
  width: 4em;
  cursor: pointer;
  background: none;
  /* border: 1px solid gray; */
  border: 3px solid white;
  margin-bottom: 2px;
}

.toolbox button.hexbutton.active{
  border: 3px solid red;
}

.toolbox button.hexbutton img{
  width: 100%;
}

.toolbox>button{
  margin: 0.25em;
}

.textmap{
  font-family: Consolas, monaco, monospace;
  font-size: 80%;
  width: 30vh;
}

.scenariomap svg {
  width: 98vh;
  height: 85vh;
}

.hexgrid{
  border: 1pt solid black;
  cursor: pointer;
  pointer-events: visible;
}

.grid_show .hexagon polygon {
  stroke: #ccc;
  stroke-width: 0;
}

.grid_hide .hexagon polygon {
  stroke: #fff;
}

.grid_hide.hex-gap polygon {
  fill: #fff;
}

/* Hack until the next react-grid comes out */
.hexagon svg{
  opacity: 1;
  pointer-events: all;
}

.hexagon polygon:hover{
  stroke: #c00;
  stroke-width: 1px;
}

.statusbox {
  padding-left: 0.5em;
  padding-right: 1em;
}

.statusbox .good::before{
  font-weight: bold;
  color: green;
  content: '✓';
  padding-right: 0.12em;
}

.statusbox .bad::before {
  font-weight: bold;
  color: red;
  content: '✗';

}
